% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/esios2csv.R
\encoding{UTF-8}
\name{esios2csv}
\alias{esios2csv}
\title{Fetch ESIOS Time-Series and Save as CSV Files}
\usage{
esios2csv(
  var_names,
  years,
  api_key,
  resolution = c("1min", "5min", "10min", "15min", "30min", "hour", "1hour"),
  output_dir,
  verbose = FALSE,
  encoding = "UTF-8"
)
}
\arguments{
\item{var_names}{Character vector of indicator names in "ShortName_ID" format.}

\item{years}{Integer vector of years to download (e.g. \code{2023:2024}).}

\item{api_key}{String: your personal ESIOS API key.}

\item{resolution}{Character: one of
\code{"1min","5min","10min","15min","30min","hour","1hour","4hour","1day"}.}

\item{output_dir}{String: directory to save CSV files (created if missing).}

\item{verbose}{Logical; if \code{TRUE}, prints progress messages.}

\item{encoding}{Character: JSON encoding for API responses (default "UTF-8").}
}
\value{
Invisibly, a character vector of saved file paths.
}
\description{
\code{esios2csv} downloads raw ESIOS indicator data from Spain's API at
  specified temporal resolution and writes individual CSV files per variable
  and year, named <var_name><suffix><year>.csv. Supported resolutions are:
  \itemize{
    \item \code{"1min"}: 1-minute
    \item \code{"5min"}: 5-minute
    \item \code{"10min"}: 10-minute
    \item \code{"15min"}: 15-minute
    \item \code{"30min"}: 30-minute
    \item \code{"hour"} / \code{"1hour"}: hourly
    \item \code{"4hour"}: 4-hour
    \item \code{"1day"}: daily
  }
  It enforces the \code{instant} column format ("YYYY-MM-DD HH:MM:SS" in Europe/Madrid),
  handles large intervals by recursively splitting on HTTP 504, and issues
  warnings on errors.
}
