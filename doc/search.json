[{"path":"https://moviedo5.github.io/esios2fd/articles/Example-dates.html","id":"example-create-functional-data-by-date-range","dir":"Articles","previous_headings":"","what":"Example: Create Functional Data by Date Range","title":"Create functional data by date range","text":"example demonstrates fetch date-time range ESIOS indicator data data frame, convert daily functional data ().","code":""},{"path":"https://moviedo5.github.io/esios2fd/articles/Example-dates.html","id":"parameters","dir":"Articles","previous_headings":"Example: Create Functional Data by Date Range","what":"1. Parameters","title":"Create functional data by date range","text":"","code":"api_key <- Sys.getenv(\"ESIOS_API_KEY\") start   <- \"2022-01-01\" end     <- \"2022-01-15\""},{"path":"https://moviedo5.github.io/esios2fd/articles/Example-dates.html","id":"fetch-into-data-frame","dir":"Articles","previous_headings":"Example: Create Functional Data by Date Range","what":"2. Fetch Into Data Frame","title":"Create functional data by date range","text":"Use download align series hourly timestamps:","code":"df_hourly <- esios2df(   var_names  = vars,   start_date = start,   end_date   = end,   api_key    = api_key,   resolution = \"hour\",   verbose    = TRUE ) head(df_hourly) par(mfrow=c(1,1)) df1 <- df_hourly[df_hourly$var_name==\"Onshore_wind_117\",] plot(df1$datetime, df1$value, col = 2, type=\"l\",      main = \"Hourly Solar Profile\", xlab = \"Date-Time\", ylab = \"Value\")  df2 <- df_hourly[df_hourly$var_name ==\"wind_power_generation_forecast_541\",] lines(df2$datetime, df2$value, type = \"l\", col=4)"},{"path":"https://moviedo5.github.io/esios2fd/articles/Example-dates.html","id":"convert-to-daily-functional-data","dir":"Articles","previous_headings":"Example: Create Functional Data by Date Range","what":"3. Convert to Daily Functional Data","title":"Create functional data by date range","text":"Now build object row day columns hours:","code":"ldata_hourly <- esios2lfdata(   var_names  = vars,   start_date = start,   end_date   = end,   api_key    = api_key,   resolution = \"hour\",   verbose    = FALSE ) plot(ldata_hourly$Wind_551, main = \"Wind: Daily Hourly Curves\")"},{"path":"https://moviedo5.github.io/esios2fd/articles/Example-dates.html","id":"changing-resolution-to-10-minute","dir":"Articles","previous_headings":"Example: Create Functional Data by Date Range","what":"4. Changing Resolution to 10-Minute","title":"Create functional data by date range","text":"illustrate resolution change, fetch 10-min intervals:","code":"vars <- c(\"Wind_551\")  df_10min <- esios2df(   var_names  = vars,   start_date = start,   end_date   = end,   api_key    = api_key,   resolution = \"min\",   verbose    = TRUE ) # Note: this may skip variables without 10-min data  # Convert to ldata ldata_10min <- esios2lfdata(   var_names  = vars,   start_date = start,   end_date   = end,   api_key    = api_key,   resolution = \"min\",   verbose    = FALSE ) plot(ldata_10min$Onshore_wind_117, main = \"Wind: Daily 10-min Curves\")"},{"path":"https://moviedo5.github.io/esios2fd/articles/Example-years.html","id":"example-combine-functional-data-by-years-with-calendar-annotations","dir":"Articles","previous_headings":"","what":"Example: Combine Functional Data by Years with Calendar Annotations","title":"Combine Functional Data by Years with Calendar Annotations","text":"vignette demonstrates download ESIOS indicator data year year, convert functional data, enrich resulting ldata$df calendar attributes using date2calendar().","code":""},{"path":"https://moviedo5.github.io/esios2fd/articles/Example-years.html","id":"parameters","dir":"Articles","previous_headings":"Example: Combine Functional Data by Years with Calendar Annotations","what":"1. Parameters","title":"Combine Functional Data by Years with Calendar Annotations","text":"","code":"api_key <- Sys.getenv(\"ESIOS_API_KEY\") vars    <- c(\"Wind_551\", \"Solar_PV_119\") years   <- 2020:2021"},{"path":"https://moviedo5.github.io/esios2fd/articles/Example-years.html","id":"download-csvs-and-create-functional-data-objects","dir":"Articles","previous_headings":"Example: Combine Functional Data by Years with Calendar Annotations","what":"2. Download CSVs and Create Functional Data Objects","title":"Combine Functional Data by Years with Calendar Annotations","text":"","code":"# Download 10-minute CSVs for each year esios2csv(   var_names  = vars,   years      = years,   api_key    = api_key,   resolution = \"min\",   output_dir = \"data_csv\",   verbose    = TRUE )  # Convert CSVs into fdata objects esios2fdata(   var_names  = vars,   years      = years,   resolution = \"min\",   input_dir  = \"data_csv\",   output_dir = \"data_rda\",   mode       = \"csv\",   verbose    = TRUE )"},{"path":"https://moviedo5.github.io/esios2fd/articles/Example-years.html","id":"combine-into-ldata-and-annotate-calendar-data","dir":"Articles","previous_headings":"Example: Combine Functional Data by Years with Calendar Annotations","what":"3. Combine into ldata and Annotate Calendar Data","title":"Combine Functional Data by Years with Calendar Annotations","text":"","code":"# Combine all variables into an 'ldata' object ldata <- esios2ldata(   years      = years,   var_names  = vars,   resolution = \"min\",   input_dir  = \"data_rda\",   mode       = \"rda\",   verbose    = FALSE )  # Enrich the 'df' component with calendar attributes calendar_df <- date2calendar(   ldata$df,   tz         = \"Europe/Madrid\",   components = c(\"year\",\"month\",\"day_of_week\",\"laborable\") )  # View the first rows of the annotated calendar data head(calendar_df)"},{"path":"https://moviedo5.github.io/esios2fd/articles/Example-years.html","id":"plot-daily-curves","dir":"Articles","previous_headings":"Example: Combine Functional Data by Years with Calendar Annotations","what":"4. Plot Daily Curves","title":"Combine Functional Data by Years with Calendar Annotations","text":"","code":"# Plot daily 10-minute curves for Wind_551 plot(   ldata$Wind_551,   main = \"Wind_551: Daily 10-min Curves (2020-2021)\" )"},{"path":"https://moviedo5.github.io/esios2fd/articles/Informacion-y-Ejemplos.html","id":"introducción-y-motivación","dir":"Articles","previous_headings":"","what":"1. Introducción y motivación","title":"Uso práctico de la API de ESIOS con esios2fd","text":"En este documento repasamos un flujo de trabajo práctico con el paquete esios2fd: ¿Cómo obtener y gestionar tu clave de API en ESIOS? Descargar series de tiempo en distintas resoluciones (1min, 5min, 10min, 15min, 30min, hora). Analizar el curioso zigzag que aparece en la resolución de 15 minutos. Verificar consistencia agregando paso horario. Notas y recomendaciones para el uso futuro.","code":""},{"path":"https://moviedo5.github.io/esios2fd/articles/Informacion-y-Ejemplos.html","id":"version-0-2-0","dir":"Articles","previous_headings":"1. Introducción y motivación","what":"Version 0.2.0","title":"Uso práctico de la API de ESIOS con esios2fd","text":"El paquete esios2fd ofrece tres grupos de funciones según el flujo de trabajo: esios2indicators(api_key, output_dir, encoding) esios2resolution(indicators, api_key, check_date, verbose, csv_file) Estas funciones le permiten descargar y enriquecer el catálogo de indicadores de ESIOS, asignarles nombres limpios, unidades y detectar las resoluciones soportadas. esios2csv(var_names, years, api_key, resolution, output_dir, verbose) Descarga datos por variable y año en CSV (resolución “hour” o “min”) y los guarda localmente. esios2fdata(var_names, years, resolution, input_dir, output_dir, mode, verbose) Convierte esos CSV/RDA en objetos fdata, manejando automáticamente los saltos de horario. esios2ldata(years, var_names, resolution, input_dir, mode, output_dir, verbose) Combina todo en un único objeto ldata con matriz diaria y curvas funcionales. esios2df(var_names, start_date, end_date, api_key, resolution, verbose, encoding) Recupera datos “al vuelo” en un rango de fechas, devolviendo un data.frame con una fila por timestamp. esios2lfdata(var_names, start_date, end_date, api_key, resolution, mode, input_dir, output_dir, verbose) Usa internamente esios2df() (o lee CSV/RDA) para generar un ldata único con matriz diaria y curvas, sin particionar por años. Para más información visita la página web del paquete.","code":""},{"path":"https://moviedo5.github.io/esios2fd/articles/Informacion-y-Ejemplos.html","id":"configuración-de-la-api","dir":"Articles","previous_headings":"","what":"2. Configuración de la API","title":"Uso práctico de la API de ESIOS con esios2fd","text":"Antes de empezar, necesitamos nuestra clave: Accede https://www.esios.ree.es/es y registra/identifícate. Solicita un token personal desde tu perfil. Exporta la variable de entorno en tu sistema: En R: para más información consulta la documentación de la API.","code":"export ESIOS_API_KEY=\"TU_TOKEN\" api_key <- Sys.getenv(\"ESIOS_API_KEY\")"},{"path":"https://moviedo5.github.io/esios2fd/articles/Informacion-y-Ejemplos.html","id":"descarga-y-visualización-de-15-min","dir":"Articles","previous_headings":"","what":"3. Descarga y visualización de 15 min","title":"Uso práctico de la API de ESIOS con esios2fd","text":"Obtenemos la serie de Emisiones de CO₂ en tiempo real (ID 10355) para 2022: Observación: Verás alternancia clara entre valores altos y bajos en cada segmento de 15 min.","code":"var <- \"Real_time_CO2_10355\" df15 <- esios2csv(   var_names  = var,   years      = 2022,   api_key    = api_key,   resolution = \"15min\",   output_dir = \"data_csv\",   verbose    = TRUE ) %>%   read.csv2(stringsAsFactors = FALSE)  # Primeros valores head(df15)"},{"path":"https://moviedo5.github.io/esios2fd/articles/Informacion-y-Ejemplos.html","id":"agregar-a-hora-y-validar","dir":"Articles","previous_headings":"","what":"4. Agregar a hora y validar","title":"Uso práctico de la API de ESIOS con esios2fd","text":"Sumamos bloques de 15 min para comparar con la descarga directa hora: El resultado es TRUE. Esto confirma que, pese al zigzag, la agregación recupera los totales horarios correctos.","code":"df_h15 <- df15 %>%   mutate(     time = ymd_hms(instant, tz = \"Europe/Madrid\"),     hour = floor_date(time, \"hour\")   ) %>%   group_by(hour) %>%   summarise(total15 = sum(as.numeric(val)))  # Descarga horaria directa df1h <- esios2csv(   var_names  = var,   years      = 2022,   api_key    = api_key,   resolution = \"hour\",   output_dir = \"data_csv\",   verbose    = FALSE ) %>%   read.csv2(stringsAsFactors = FALSE) %>%   transmute(     hour = ymd_hms(instant, tz = \"Europe/Madrid\"),     total1h = as.numeric(val)   )  # Comprobación all.equal(df_h15$total15, df1h$total1h)"},{"path":"https://moviedo5.github.io/esios2fd/articles/Informacion-y-Ejemplos.html","id":"origen-y-recomendaciones","dir":"Articles","previous_headings":"","what":"5. Origen y recomendaciones","title":"Uso práctico de la API de ESIOS con esios2fd","text":"Es importante saber que la API en modo 15 min devuelve: value: máximo o mínimo registrado en el intervalo, alternando. max_value y min_value: verdaderos límites del intervalo. Si necesitamos un dato único uniforme, podemos: Tomar la media: (max_value + min_value)/2. Filtrar solo máximos o solo mínimos. Usar resoluciones de 10 min, que reflejan valores puntuales. Sugerencia futura: incorporar al paquete una función que permita elegir entre value, max_value, min_value o mean al convertir series de alta frecuencia.","code":""},{"path":"https://moviedo5.github.io/esios2fd/articles/Informacion-y-Ejemplos.html","id":"próximos-pasos","dir":"Articles","previous_headings":"","what":"6. Próximos pasos","title":"Uso práctico de la API de ESIOS con esios2fd","text":"Cacheo local de CSVs de alta frecuencia para reducir llamadas repetidas. Gráficos interactivos para explorar zigzag y transiciones DST. Extender soporte series de mercado intradiario de REE.","code":""},{"path":"https://moviedo5.github.io/esios2fd/articles/Informacion-y-Ejemplos.html","id":"otra-información-de-interés","dir":"Articles","previous_headings":"","what":"7. Otra información de interés","title":"Uso práctico de la API de ESIOS con esios2fd","text":"Desde la web de rOpenSpain se pueden consultar numerosos paquetes de R de interés, en particular resios que descarga los datos de la Red Eléctrica Española y del operador del sistema (‘eSios’) de Red Eléctrica. Vigneta generada en julio de 2025 — MIT License","code":""},{"path":"https://moviedo5.github.io/esios2fd/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Manuel Oviedo. Author, maintainer.","code":""},{"path":"https://moviedo5.github.io/esios2fd/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Oviedo M (2025). esios2fd: Download Convert ESIOS Indicators Functional Data. R package version 0.2.0, https://moviedo5.github.io/esios2fd.","code":"@Manual{,   title = {esios2fd: Download and Convert ESIOS Indicators to Functional Data},   author = {Manuel Oviedo},   year = {2025},   note = {R package version 0.2.0},   url = {https://moviedo5.github.io/esios2fd}, }"},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"esios2fd-download-and-convert-esios-indicators-to-functional-data","dir":"","previous_headings":"","what":"esios2fd 0.1.0","title":"esios2fd 0.1.0","text":"esios2fd package provides tools download raw time-series indicator data Spanish Electricity Grid’s public ESIOS API (https://www.esios.ree.es/) transform functional data (fdata) objects daily matrices (ldata) via fda.usc framework. API documentation FAQs, see: ESIOS API main site: https://www.esios.ree.es/ FAQ: https://www.esios.ree.es/es/ayuda-preguntas-frecuentes","code":""},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"version-020","dir":"","previous_headings":"","what":"Version 0.2.0","title":"esios2fd 0.1.0","text":"esios2fd package supports three main workflows: --Fly Query esios2df(): Fetch raw indicator data date-time range, returning data.frame one row per timestamp. esios2lfdata(): Build ldata object directly esios2df(), producing daily curves without intermediate files. Annual Download & Functional Conversion esios2csv(): Download save per-variable, per-year CSV files. esios2fdata(): Convert CSVs fdata objects (optional RDA files), handling daylight-saving transitions. esios2ldata(): Merge annual series single ldata object—one daily index plus functional data curves indicator. Indicator Management esios2indicators(): Retrieve cache catalog available ESIOS indicators. esios2resolution(): Clean indicator names, assign units, detect time resolutions supports. details, visit website package.","code":""},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"esios2fd 0.1.0","text":"","code":"# install.packages(\"remotes\") remotes::install_github(\"moviedo5/esios2fd\")"},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"fist-setps","dir":"","previous_headings":"","what":"Fist setps","title":"esios2fd 0.1.0","text":"","code":"library(esios2fd) api_key <- Sys.getenv(\"ESIOS_API_KEY\")"},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"example-on-the-fly-query-with-esios2lfdata","dir":"","previous_headings":"","what":"Example: On-the-Fly Query with esios2lfdata()","title":"esios2fd 0.1.0","text":"Fetch combined daily ldata Forecasted demand (MWh) Scheduled demand (MWh) two dates. Use resolution = “1hour” match default one hour granularity: indicators, resolution can increased 5 minutes (execution following code shown): Forecasted vs. Scheduled Demand — Iberian Blackout April 28 2025","code":"vars <- c(\"Real_demand_1293\",\"Forecasted_demand_544\", \"Scheduled_demand_545\") out1 <- esios2lfdata(   var_names   = vars,   start_date  = \"2025-04-25\",   end_date    = \"2025-04-28\",   api_key     = api_key,   resolution  = \"1hour\",   verbose     = F )  # Inspect metadata and plot first curves: head(out1$df) plot(out1, ylim=c(13e4,4e5), ylab=\"MWh\") #vars <- c(\"Forecasted_demand_544\", \"Scheduled_demand_545\") out2 <- esios2lfdata(   var_names   = vars,   start_date  = \"2025-04-25\",   end_date    = \"2025-04-28\",   api_key     = api_key,   resolution  = \"5min\",   verbose     = F ) plot(out2, ylim=c(1e4,35e3), ylab=\"MWh\")"},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"example-annual-download-workflow-with-esios2csv","dir":"","previous_headings":"","what":"Example: annual-download workflow with esios2csv()","title":"esios2fd 0.1.0","text":"code downloads ESIOS indicator data year year, convert functional data, enrich resulting ldata$df calendar attributes using date2calendar().","code":"vars <- c(\"Solar_PV_542\",\"Solar_543\") years <- 2022:2023  esios2csv(vars, years, api_key,           resolution = \"1hour\",           output_dir  = \"./data_csv\",           verbose     = FALSE)  # Create functional data objects (.rda) out3 <- esios2fdata(vars, years,             resolution = \"1hour\",             input_dir  = \"./data_csv\",             output_dir = \"./data_rda\",             verbose    = TRUE)  pal   <- colorRampPalette(c(\"blue\", \"yellow\", \"red\", \"yellow\", \"blue\"))(365)  # 4. Grafica usando esos colores par(mfrow = c(2, 2), mar = c(4, 4, 2, 1)) vars <- names(out3)[-1]   # omitimos el primer elemento 'df' for (i in seq_along(vars)) {   plot(out3[[ vars[i] ]],        col  = pal[1:365],        main = vars[i],        lwd  = 1.5) }   # Combine into unified ldata object out4 <- esios2ldata(years, vars,                      resolution = \"1hour\",                      input_dir  = \"./data_csv\",                      mode       = \"csv\",                      verbose    = TRUE)  # Equivalent result when loading from RDA files out4 <- esios2ldata(years, vars,                     resolution = \"1hour\",                     input_dir  = \"./data_rda\",                     mode       = \"rda\",                     verbose    = FALSE)  # Enrich the 'df' component with calendar attributes out4$df <- date2calendar(   out4$df,   tz         = \"Europe/Madrid\",   components = c(\"year\",\"month\",\"day_of_week\",\"day_of_year\") ) # View the first and last rows of the annotated calendar data rbind(head(out4$df),tail(out4$df)) # Plot example #plot(out4,var.name=\"month\") pal   <- colorRampPalette(c(\"blue\", \"yellow\", \"red\", \"yellow\", \"blue\"))(365*2)  plot(out4, col=pal[1:730])"},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"indicator-catalog","dir":"","previous_headings":"Example: annual-download workflow with esios2csv()","what":"Indicator Catalog","title":"esios2fd 0.1.0","text":"Retrieve metadata resolution flags: Note: may take long time, almost 2,000 indicators resolution consulted.","code":"inds <- esios2indicators(api_key, output_dir = \"data_indicators\") res  <- esios2resolution(inds, api_key, verbose = TRUE) head(res)"},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"esios2fd 0.1.0","text":"MIT + file LICENSE","code":""},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"information-download-from-api","dir":"","previous_headings":"","what":"Information download from API","title":"esios2fd 0.1.0","text":"new esios public website makes available everybody API data download, detailed https://api.esios.ree.es. Calls displayed documentation examples. use API must request personal token mailing consultasios@@ree.es, due public current token changes often.","code":""},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"api-para-descarga-de-información","dir":"","previous_headings":"","what":"API para descarga de información","title":"esios2fd 0.1.0","text":"Este paquete cconsulta la API de esios (https://api.esios.ree.es), pra poder utilizar esta API el usuario debe solicitar su token personal enviando un correo indicando su nombre y apellidos consultasios@ree.es. Todas las peticiones se realizan la API de ESIOS. Debe seguirse estrictamente las indicaciones oficiales de la API de REE: El token se emite para uso personal del solicitante. En aplicaciones públicas, los datos deben almacenarse en un servidor propio y hacerse peticiones directas los sistemas de REE. Evitar peticiones masivas, redundantes o innecesarias (por ejemplo, datos ya descargados o indicadores inexistentes).","code":""},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"esios2fd 0.1.0","text":"Manuel Oviedo de la Fuente manuel.oviedo@udc.es","code":""},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"esios2fd 0.1.0","text":"use esios2fd published research, please cite: Oviedo de la Fuente, M. (2025). esios2fd: Download Convert ESIOS Indicators Functional Data. R package version 0.1.0.","code":""},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"esios2fd 0.1.0","text":"work supported grants MICINN Xunta de Galicia (ED431C-2020-14, ED431G-2019/01), co-financed ERDF.","code":""},{"path":"https://moviedo5.github.io/esios2fd/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"esios2fd 0.1.0","text":"Febrero-Bande, M. Oviedo de la Fuente, M. (2012). Statistical Computing Functional Data Analysis: R Package fda.usc. Journal Statistical Software, 51(4):1–28. https://doi.org/10.18637/jss.v051.i04","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/date2calendar.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate Dates or Date-Times with Calendar Attributes — date2calendar","title":"Annotate Dates or Date-Times with Calendar Attributes — date2calendar","text":"Converts vector POSIXct date-times —data.frame `date`   column— data.frame enriched calendar temporal attributes   (year, month, day--week, DST flags, holidays, etc.). input   data.frame containing column `date` (class Date POSIXct),   output data.frame new attributes bound.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/date2calendar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate Dates or Date-Times with Calendar Attributes — date2calendar","text":"","code":"date2calendar(   datetimes,   tz = \"Europe/Madrid\",   components = c(\"year\", \"month\", \"day_of_year\", \"day_of_month\", \"day_of_week\",     \"is_leap\", \"is_dst\", \"dst_change\", \"is_easter\", \"is_good_friday\", \"is_easter_mo\",     \"is_holiday\", \"laborable\") )"},{"path":"https://moviedo5.github.io/esios2fd/reference/date2calendar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate Dates or Date-Times with Calendar Attributes — date2calendar","text":"datetimes Either POSIXct (coercible) vector date-time stamps, data.frame includes column named `date` (Date POSIXct). tz Character string; target time zone date-time ops (default: \"Europe/Madrid\"). components Character vector specifying attributes include. Supported names: * \"year\": calendar year * \"month\": month (January–December) * \"day_of_year\": day year (1–365/366) * \"day_of_month\": day month (1–31) * \"day_of_week\": day week (Monday–Sunday, 1–7) * \"is_leap\": leap year flag (0/1) * \"is_dst\": DST flag (0/1) * \"dst_change\": DST transition timestamp (0/1) * \"is_easter\": Easter Sunday (0/1) * \"is_good_friday\": Good Friday (0/1) * \"is_easter_mo\": Easter Monday (0/1) * \"is_holiday\": national holiday (0/1) * \"laborable\": non-working day (weekend holiday) (0/1)","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/date2calendar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate Dates or Date-Times with Calendar Attributes — date2calendar","text":"`datetimes` vector, returns data.frame column   `datetime` one column per requested component.   `datetimes` data.frame column `date`, returns   data.frame new attribute columns appended.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch ESIOS Time-Series and Save as CSV Files — esios2csv","title":"Fetch ESIOS Time-Series and Save as CSV Files — esios2csv","text":"esios2csv downloads raw ESIOS indicator data Spain's API   specified temporal resolution writes individual CSV files per variable   year, named <var_name><suffix><year>.csv. Supported resolutions : \"1min\": 1-minute \"5min\": 5-minute \"10min\": 10-minute \"15min\": 15-minute \"30min\": 30-minute \"hour\" / \"1hour\": hourly \"4hour\": 4-hour \"1day\": daily enforces instant column format (\"YYYY-MM-DD HH:MM:SS\" Europe/Madrid),   handles large intervals recursively splitting HTTP 504, issues   warnings errors.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch ESIOS Time-Series and Save as CSV Files — esios2csv","text":"","code":"esios2csv(   var_names,   years,   api_key,   resolution = c(\"1min\", \"5min\", \"10min\", \"15min\", \"30min\", \"hour\", \"1hour\"),   output_dir,   verbose = FALSE,   encoding = \"UTF-8\" )"},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch ESIOS Time-Series and Save as CSV Files — esios2csv","text":"var_names Character vector indicator names \"ShortName_ID\" format. years Integer vector years download (e.g. 2023:2024). api_key String: personal ESIOS API key. resolution Character: one \"1min\",\"5min\",\"10min\",\"15min\",\"30min\",\"hour\",\"1hour\",\"4hour\",\"1day\". output_dir String: directory save CSV files (created missing). verbose Logical; TRUE, prints progress messages. encoding Character: JSON encoding API responses (default \"UTF-8\").","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch ESIOS Time-Series and Save as CSV Files — esios2csv","text":"Invisibly, character vector saved file paths.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch ESIOS Time-Series as Data Frame — esios2df","title":"Fetch ESIOS Time-Series as Data Frame — esios2df","text":"esios2df retrieves raw time-series data one ESIOS indicators   specified date-time interval returns consolidated data.frame   one row per timestamp. Supported resolutions include: \"1min\": 1 minute \"5min\": 5 minutes \"10min\": 10 minutes \"15min\": 15 minutes \"30min\": 30 minutes \"1hour\": 1 hour \"4hour\": 4 hours \"1day\": 24 hours","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch ESIOS Time-Series as Data Frame — esios2df","text":"","code":"esios2df(   var_names,   start_date,   end_date,   api_key,   resolution = c(\"1min\", \"5min\", \"10min\", \"15min\", \"30min\", \"1hour\", \"4hour\", \"1day\"),   verbose = FALSE,   encoding = \"UTF-8\" )"},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch ESIOS Time-Series as Data Frame — esios2df","text":"var_names Character vector indicators \"ShortName_ID\" format. start_date Character string defining interval start (\"YYYY-MM-DD\" \"YYYY-MM-DD HH:MM:SS\"). end_date Character string defining interval end (formats start_date). api_key personal ESIOS API key. resolution Character: one \"1min\",\"5min\",\"10min\",\"15min\",\"30min\",\"1hour\",\"4hour\",\"1day\". verbose Logical; TRUE, prints progress messages. encoding Character: JSON encoding (default \"UTF-8\").","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch ESIOS Time-Series as Data Frame — esios2df","text":"data.frame columns: var_name Indicator name character datetime POSIXct timestamp Europe/Madrid timezone value Numeric value geocode Integer geo-code NA geolabel Character geo-label NA","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2fd.html","id":null,"dir":"Reference","previous_headings":"","what":"esios2fd: Download and Convert ESIOS Indicators to Functional Data — esios2fd","title":"esios2fd: Download and Convert ESIOS Indicators to Functional Data — esios2fd","text":"esios2fd package provides tools fetch time-series data Spain's ESIOS API transform raw series standardized formats functional data objects. esios2fd can: Retrieve save indicator metadata (IDs, names, units) via esios2indicators(). Download raw time-series CSV files uniform timestamps via esios2csv(). Convert CSV data functional data (`fdata`) objects, handling DST shifts, via esios2fdata(). Assemble daily curves `ldata` object multivariate analysis via esios2lfdata(). Directly fetch time-series data.frame esios2df().","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2fd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"esios2fd: Download and Convert ESIOS Indicators to Functional Data — esios2fd","text":"Functions package follow ESIOS API usage guidelines: must supply personal API token respect rate limits caching responses exposing public applications. See https://api.esios.ree.es info.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2fd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"esios2fd: Download and Convert ESIOS Indicators to Functional Data — esios2fd","text":"Manuel Oviedo de la Fuente [manuel.oviedo@udc.es]","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2fdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ESIOS CSVs or RDAs and transform into functional-data (fdata) objects — esios2fdata","title":"Read ESIOS CSVs or RDAs and transform into functional-data (fdata) objects — esios2fdata","text":"Reads ESIOS CSVs RDA files produced esios2csv() converts   functional-data (fdata) objects. Supports multiple resolutions (minute-based   hourly) handles daylight-saving anomalies interpolating missing   duplicate intervals DST transition.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2fdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ESIOS CSVs or RDAs and transform into functional-data (fdata) objects — esios2fdata","text":"","code":"esios2fdata(   var_names,   years,   resolution = c(\"1min\", \"5min\", \"10min\", \"15min\", \"30min\", \"hour\", \"1hour\"),   input_dir,   output_dir = NULL,   mode = c(\"csv\", \"rda\"),   verbose = FALSE )"},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2fdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ESIOS CSVs or RDAs and transform into functional-data (fdata) objects — esios2fdata","text":"var_names Character vector variable names (e.g. \"Solar_PV_119\"). years Integer vector years process. resolution Character: one \"1min\",\"5min\",\"10min\",\"15min\",\"30min\",\"hour\",\"1hour\"; must match resolution used generating CSV/RDA. input_dir Directory containing CSV RDA files. output_dir Directory RDA files saved (created missing); NULL, output files written. mode Character: \"csv\" read CSV files, \"rda\" read saved RDA objects. verbose Logical; TRUE, prints progress messages.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2fdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ESIOS CSVs or RDAs and transform into functional-data (fdata) objects — esios2fdata","text":"list class c(\"ldata\",\"list\") fdata objects, named         \"<var>_<suffix><year>\".","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2indicators.html","id":null,"dir":"Reference","previous_headings":"","what":"Download ESIOS indicators metadata and augment with units — esios2indicators","title":"Download ESIOS indicators metadata and augment with units — esios2indicators","text":"esios2indicators fetches list available indicators Spain's ESIOS API Spanish English, cleans short names (replacing spaces hyphens \"_\"), appends ID ensure uniqueness, assigns units manually, saves result CSV RDA files.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2indicators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download ESIOS indicators metadata and augment with units — esios2indicators","text":"","code":"esios2indicators(api_key, output_dir = \".\", encoding = \"UTF-8\")"},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2indicators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download ESIOS indicators metadata and augment with units — esios2indicators","text":"api_key String: ESIOS API key. output_dir Directory files saved (default \".\"). encoding Encoding used read JSON (default \"UTF-8\").","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2indicators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download ESIOS indicators metadata and augment with units — esios2indicators","text":"Invisible data.frame columns id, short_name_es,   name_es, short_name_en, name_en, units.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2ldata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ESIOS CSVs or RDAs and build daily curves into ldata object — esios2ldata","title":"Read ESIOS CSVs or RDAs and build daily curves into ldata object — esios2ldata","text":"Reads ESIOS CSVs RDAs builds single ldata object:   list common metadata data.frame one combined fdata per variable.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2ldata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ESIOS CSVs or RDAs and build daily curves into ldata object — esios2ldata","text":"","code":"esios2ldata(   years,   var_names,   resolution = c(\"hour\", \"min\"),   input_dir,   mode = c(\"csv\", \"rda\"),   output_dir = NULL,   verbose = FALSE )"},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2ldata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ESIOS CSVs or RDAs and build daily curves into ldata object — esios2ldata","text":"years Integer vector years process. var_names Character vector variable names (e.g. \"Solar_PV_119\"). resolution Character: \"hour\" (24 points/day) \"min\" (144 points/day 10-min intervals). input_dir Directory containing input CSVs RDAs. mode Character: \"csv\" read CSV files, \"rda\" load existing RDA files. output_dir Directory save generated fdata files; created missing. Optional. verbose Logical; TRUE, prints progress messages.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2ldata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ESIOS CSVs or RDAs and build daily curves into ldata object — esios2ldata","text":"list class c(\"ldata\",\"list\"): first element common metadata df,   variable combined fdata object.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2lfdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Build daily curves into ldata object from ESIOS data — esios2lfdata","title":"Build daily curves into ldata object from ESIOS data — esios2lfdata","text":"Fetches ESIOS time-series specified resolution date range via esios2df(),   assembles single ldata list: common metadata (daily index, date, leap, dst)   plus one fdata per variable daily curves.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2lfdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build daily curves into ldata object from ESIOS data — esios2lfdata","text":"","code":"esios2lfdata(   var_names,   start_date,   end_date,   api_key,   resolution = c(\"1min\", \"5min\", \"10min\", \"15min\", \"30min\", \"hour\", \"1hour\", \"4hour\",     \"1day\"),   verbose = FALSE )"},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2lfdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build daily curves into ldata object from ESIOS data — esios2lfdata","text":"var_names Character vector indicator names \"ShortName_ID\" format. start_date String \"YYYY-MM-DD\" interval start (Europe/Madrid). end_date String \"YYYY-MM-DD\" interval end (Europe/Madrid). api_key ESIOS API key. resolution Character: one \"1min\",\"5min\",\"10min\",\"15min\",\"30min\", \"hour\",\"1hour\",\"4hour\",\"1day\". verbose Logical; TRUE, prints progress messages.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2lfdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build daily curves into ldata object from ESIOS data — esios2lfdata","text":"ldata list: element df data.frame (index, date, leap, dst),   followed variable daily fdata object.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2resolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Supported Time Resolutions for ESIOS Indicators — esios2resolution","title":"Detect Supported Time Resolutions for ESIOS Indicators — esios2resolution","text":"Adds binary flags ESIOS indicators metadata data.frame denoting whether indicator supports various time-series resolutions. Supported resolutions include: 1 minute, 5 minutes, 10 minutes, 15 minutes, 30 minutes, 1 hour, 4 hours, 1 day. function samples specified date (default: yesterday) queries ESIOS API inspect actual timestamp intervals.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2resolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Supported Time Resolutions for ESIOS Indicators — esios2resolution","text":"","code":"esios2resolution(   indicators = NULL,   api_key,   encoding = \"UTF-8\",   check_date = NULL,   verbose = FALSE,   csv_file = NULL )"},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2resolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Supported Time Resolutions for ESIOS Indicators — esios2resolution","text":"indicators data.frame returned esios2indicators(). NULL, full indicator catalog fetched automatically. api_key String: personal ESIOS API key. encoding Character: JSON encoding API responses (default: \"UTF-8\"). check_date Date string \"YYYY-MM-DD\" used sampling; defaults Sys.Date() - 1. verbose Logical; TRUE, progress messages printed. csv_file Optional string path: provided, writes annotated metadata CSV file (directories created needed).","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2resolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Supported Time Resolutions for ESIOS Indicators — esios2resolution","text":"input indicators data.frame extended integer   columns res1min, res5min, res10min, res15min,   res30min, res1hour, res4hour, res1day,   set 1 indicator supports resolution, 0 otherwise.","code":""},{"path":"https://moviedo5.github.io/esios2fd/reference/esios2resolution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Supported Time Resolutions for ESIOS Indicators — esios2resolution","text":"","code":"if (FALSE) { # \\dontrun{ # Annotate only Wind_551 api_key <- Sys.getenv(\"ESIOS_API_KEY\") inds <- esios2indicators(api_key, output_dir = \"data_indicators\") res  <- esios2resolution(   indicators = inds[inds$short_name_en == \"Wind_551\", ],   api_key     = api_key,   verbose     = TRUE ) print(res[, c(\"short_name_en\", \"res5min\", \"res10min\", \"res1hour\")]) } # }"},{"path":"https://moviedo5.github.io/esios2fd/news/index.html","id":"esios2fd-020","dir":"Changelog","previous_headings":"","what":"esios2fd 0.2.0","title":"esios2fd 0.2.0","text":"Added esios2resolution(), adds binary flags (1/0) indicate time resolutions indicator supports. Introduced three new functions: esios2df(), esios2lfdata(), date2calendar(). Expanded supported time resolutions beyond original two (hourly 10-minute) include: 1 min, 5 min, 10 min, 15 min, 30 min, 1 hour, 4 hours, 1 day.Note: indicators offer every resolution (e.g. 1 min often unavailable), (notably 15 min) may exhibit irregular zig-zag values raw API output.","code":""},{"path":"https://moviedo5.github.io/esios2fd/news/index.html","id":"esios2fd-011","dir":"Changelog","previous_headings":"","what":"esios2fd 0.1.1","title":"esios2fd 0.1.1","text":"Fixed bug esios2csv() related misnamed transmute() argument (val = val). Added verbose flag esios2indicators() optional progress messages.","code":""},{"path":"https://moviedo5.github.io/esios2fd/news/index.html","id":"esios2fd-010","dir":"Changelog","previous_headings":"","what":"esios2fd 0.1.0","title":"esios2fd 0.1.0","text":"Initial Release First version esios2fd package, including: - esios2csv() - esios2fdata() - esios2lfdata() - esios2indicators()","code":""}]
